{"pageProps":{"projectData":{"id":"compare-yml","contentHtml":"<p>This library can be used to compare two yml or json files to understand the differences in keys of both files. This library supports comparison of deeply nested keys also.</p>\n<h1>Motivation</h1>\n<p>In most of the projects, the problems that comes with internationalization <code>I18n</code> is not a day to day one. When it  comes, it's a tedious and time consuming one with lot of manual work. Most of the time, developers add the keys in primary language translation file <code>(en.yml)</code> and leave the rest of language translations stale.</p>\n<p>When a customer reports the inconsistencies in the translation, the tedious boring manual work of comparing these keys and finding out which translations are missing for what all languages is trusted into the hands of an unlucky developer by the Product Manager. This tool is a way to escape those situations with a bunch of commands and to enjoy rest of your day in peace.</p>\n<h2>Installation</h2>\n<p>Add this line to your application's Gemfile:</p>\n<pre><code class=\"language-ruby\">gem 'compare-yml'\n</code></pre>\n<p>And then execute:</p>\n<pre><code>$ bundle &#x26;&#x26; gem install compare-yml\n</code></pre>\n<p>This should install compare-yml gem in your system.</p>\n<h2>Usage</h2>\n<p>The usage of this gem is pretty simple. You don't need to have this in your gemfile to use this. An executable is already included.</p>\n<p>So after doing <code>gem install compare-yml</code>, you can directly type in </p>\n<pre><code>compare_yml source_file target_file\n</code></pre>\n<p>in your terminal/command-prompt.</p>\n<p>This library is designed to work with comparing both yaml and json files. An example usage in a rails translation situation would be: </p>\n<pre><code>compare_yml config/locales/en.yml config/locales/de.yml\n</code></pre>\n<p>This will show you the keys which are missing from <code>en.yml</code> compared to <code>de.yml</code> and vice versa. The comparision is two way meaning, we will compare <code>en.yml</code> keys with respect to <code>de.yml</code> keys and also compare <code>de.yml</code> keys with respect to <code>en.yml</code>.</p>\n<p>An example usage for people using translation in react app would be :</p>\n<pre><code>compare_yml public/static/locales/fr.json public/static/locales/en.json\n</code></pre>\n<p>You can use this for comparing translation files, as well as for any yml or json files for that matter. Do not get fooled by the examples.</p>\n<h1>References</h1>\n<p>Source code : <a href=\"https://github.com/sony-mathew/compare-yml\" target=\"_blank\" rel=\"nofollow\">Github - sony-mathew/compare-yml</a><br>\nPublished versions: <a href=\"https://rubygems.org/gems/compare-yml/\" target=\"_blank\" rel=\"nofollow\">RubyGems.org - compare-yml</a></p>\n","title":"RubyGem: Compare YML","date":"2019-04-09","author":"Sony Mathew","categories":["Rubygem"],"tags":["ruby-gem","compare-yml","compare-json","I18n","yml-diff","json-diff"]}},"__N_SSG":true}